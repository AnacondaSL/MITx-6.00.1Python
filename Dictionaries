"""
Dictionaries
"""
A python dictionary
# store pairs of data
key and value
key1       Val1
key2       Val2
key3       Val3
...        ...
custom     element
index by
label

my_dict = {} # empty dictonary
grades = {'Ana':'B','John':'A+','Denise':'A','Katy':'A'}

# no need to reply on the order, but key to value

[in] grades['Jone']
[Out] 'A+'

grades['Sylvan'] = 'A'
# add 'Sylan':'A' in the dictionary:grades

del(grades['Ana'])
#delet Ana from dictionary

[In] grades.keys()
[Out]dict_keys(['Sylvan','Katy','Denise','John'])
# get an iterable that acts like a tuple of all keys
[In]grades.values()
[Out]dict_values(['A','A','A+','B'])
# get an interable that acts like a tuple of all values

# values can be any type(immutable and mutable)
can be duplicates
dictionary values can be lists, even other dictionaries

keys
must be unique
immutable type(int,float,string,tuple,bool)

List                 VS                dictionary
ordered sequence of elements           match 'key' to 'value'
look up elements by an integer index   look up one term(value) by another term(key)
indices have an order                  No order is guaranteed 
index is an integer                    key can be any immutable type


Python字典是另一种可变容器模型，且可存储任意类型对象，如字符串、数字、元组等其他容器模型。 来源 网络
一、创建字典
字典由键和对应值成对组成。字典也被称作关联数组或哈希表。基本语法如下：
复制代码 代码如下:
dict = {'Alice': '2341', 'Beth': '9102', 'Cecil': '3258'}

也可如此创建字典：
复制代码 代码如下:
dict1 = { 'abc': 456 };
dict2 = { 'abc': 123, 98.6: 37 };

注意：
每个键与值用冒号隔开（:），每对用逗号，每对用逗号分割，整体放在花括号中（{}）。
key 键必须独一无二，但 value 值则不必。
值可以取任何数据类型，但必须是不可变的，如字符串，数或元组。
二、访问字典里的值
把相应的键放入熟悉的方括弧，如下实例:
复制代码 代码如下:
#!/usr/bin/python

dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'};

print "dict['Name']: ", dict['Name'];
print "dict['Age']: ", dict['Age'];
#以上实例输出结果：
#dict['Name']:  Zara
#dict['Age']:  7

如果用字典里没有的键访问数据，会输出错误如下：
复制代码 代码如下:
#!/usr/bin/python

dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'};

print "dict['Alice']: ", dict['Alice'];

#以上实例输出结果：
#dict['Zara']:
#Traceback (most recent call last):
#  File "test.py", line 4, in <module>
#    print "dict['Alice']: ", dict['Alice'];
#KeyError: 'Alice'[/code]
三、修改字典
向字典添加新内容的方法是增加新的键/值对，修改或删除已有键/值对如下实例:
复制代码 代码如下:
#!/usr/bin/python

dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'};

dict['Age'] = 8; # update existing entry
dict['School'] = "DPS School"; # Add new entry

 
print "dict['Age']: ", dict['Age'];
print "dict['School']: ", dict['School'];
#以上实例输出结果：
#dict['Age']:  8
#dict['School']:  DPS School

四、删除字典元素
能删单一的元素也能清空字典，清空只需一项操作。
显示删除一个字典用del命令，如下实例：
复制代码 代码如下:
#!/usr/bin/python

dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'};

del dict['Name']; # 删除键是'Name'的条目
dict.clear();     # 清空词典所有条目
del dict ;        # 删除词典

print "dict['Age']: ", dict['Age'];
print "dict['School']: ", dict['School'];
#但这会引发一个异常，因为用del后字典不再存在：
dict['Age']:
#Traceback (most recent call last):
#  File "test.py", line 8, in <module>
#    print "dict['Age']: ", dict['Age'];
#TypeError: 'type' object is unsubscriptable

五、字典键的特性
字典值可以没有限制地取任何python对象，既可以是标准的对象，也可以是用户定义的，但键不行。
两个重要的点需要记住：
1）不允许同一个键出现两次。创建时如果同一个键被赋值两次，后一个值会被记住，如下实例：
复制代码 代码如下:
#!/usr/bin/python

dict = {'Name': 'Zara', 'Age': 7, 'Name': 'Manni'};

print "dict['Name']: ", dict['Name'];
#以上实例输出结果：
#dict['Name']:  Manni

2）键必须不可变，所以可以用数，字符串或元组充当，所以用列表就不行，如下实例：
复制代码 代码如下:
#!/usr/bin/python

dict = {['Name']: 'Zara', 'Age': 7};

print "dict['Name']: ", dict['Name'];
#以上实例输出结果：
#Traceback (most recent call last):
#  File "test.py", line 3, in <module>
#    dict = {['Name']: 'Zara', 'Age': 7};
#TypeError: list objects are unhashable

六、字典内置函数&方法
Python字典包含了以下内置函数：
1、cmp(dict1, dict2)：比较两个字典元素。
2、len(dict)：计算字典元素个数，即键的总数。
3、str(dict)：输出字典可打印的字符串表示。
4、type(variable)：返回输入的变量类型，如果变量是字典就返回字典类型。
Python字典包含了以下内置方法：
1、radiansdict.clear()：删除字典内所有元素
2、radiansdict.copy()：返回一个字典的浅复制
3、radiansdict.fromkeys()：创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值
4、radiansdict.get(key, default=None)：返回指定键的值，如果值不在字典中返回default值
5、radiansdict.has_key(key)：如果键在字典dict里返回true，否则返回false
6、radiansdict.items()：以列表返回可遍历的(键, 值) 元组数组
7、radiansdict.keys()：以列表返回一个字典所有的键
8、radiansdict.setdefault(key, default=None)：和get()类似, 但如果键不已经存在于字典中，将会添加键并将值设为default
9、radiansdict.update(dict2)：把字典dict2的键/值对更新到dict里
10、radiansdict.values()：以列表返回字典中的所有值


